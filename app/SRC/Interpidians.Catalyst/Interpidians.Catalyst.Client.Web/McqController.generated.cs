// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace Interpidians.Catalyst.Client.Web.Controllers
{
    public partial class McqController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected McqController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Sample()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Sample);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Topic()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Topic);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Paper()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Paper);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public McqController Actions { get { return MVC.Mcq; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Mcq";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Mcq";
        [GeneratedCode("T4MVC", "2.0")]
        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Index = "Index";
            public readonly string Sample = "Sample";
            public readonly string Topic = "Topic";
            public readonly string Paper = "Paper";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Index = "Index";
            public const string Sample = "Sample";
            public const string Topic = "Topic";
            public const string Paper = "Paper";
        }


        static readonly ActionParamsClass_Sample s_params_Sample = new ActionParamsClass_Sample();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Sample SampleParams { get { return s_params_Sample; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Sample
        {
            public readonly string course = "course";
            public readonly string subcourse = "subcourse";
            public readonly string subject = "subject";
        }
        static readonly ActionParamsClass_Topic s_params_Topic = new ActionParamsClass_Topic();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Topic TopicParams { get { return s_params_Topic; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Topic
        {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_Paper s_params_Paper = new ActionParamsClass_Paper();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Paper PaperParams { get { return s_params_Paper; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Paper
        {
            public readonly string id = "id";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string Index = "Index";
                public readonly string Paper = "Paper";
                public readonly string Sample = "Sample";
                public readonly string Topic = "Topic";
            }
            public readonly string Index = "~/Views/Mcq/Index.cshtml";
            public readonly string Paper = "~/Views/Mcq/Paper.cshtml";
            public readonly string Sample = "~/Views/Mcq/Sample.cshtml";
            public readonly string Topic = "~/Views/Mcq/Topic.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_McqController : Interpidians.Catalyst.Client.Web.Controllers.McqController
    {
        public T4MVC_McqController() : base(Dummy.Instance) { }

        [NonAction]
        partial void IndexOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Index()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
            IndexOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void SampleOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string course, string subcourse, string subject);

        [NonAction]
        public override System.Web.Mvc.ActionResult Sample(string course, string subcourse, string subject)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Sample);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "course", course);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "subcourse", subcourse);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "subject", subject);
            SampleOverride(callInfo, course, subcourse, subject);
            return callInfo;
        }

        [NonAction]
        partial void TopicOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string id);

        [NonAction]
        public override System.Web.Mvc.ActionResult Topic(string id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Topic);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            TopicOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void PaperOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string id);

        [NonAction]
        public override System.Web.Mvc.ActionResult Paper(string id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Paper);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            PaperOverride(callInfo, id);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
